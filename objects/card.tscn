[gd_scene load_steps=10 format=2]

[ext_resource path="res://objects/card.gd" type="Script" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]

[sub_resource type="SpatialMaterial" id=1]

render_priority = 0
flags_transparent = false
flags_unshaded = false
flags_vertex_lighting = false
flags_no_depth_test = false
flags_use_point_size = false
flags_world_triplanar = false
flags_fixed_size = false
flags_albedo_tex_force_srgb = false
vertex_color_use_as_albedo = false
vertex_color_is_srgb = false
params_diffuse_mode = 0
params_specular_mode = 0
params_blend_mode = 0
params_cull_mode = 0
params_depth_draw_mode = 0
params_line_width = 1.0
params_point_size = 1.0
params_billboard_mode = 0
params_grow = false
params_use_alpha_scissor = false
albedo_color = Color( 1, 1, 1, 1 )
metallic = 0.0
metallic_specular = 0.0
metallic_texture_channel = 0
roughness = 1.0
roughness_texture_channel = 0
emission_enabled = false
normal_enabled = false
rim_enabled = false
clearcoat_enabled = true
clearcoat = 1.0
clearcoat_gloss = 1.0
anisotropy_enabled = false
ao_enabled = false
depth_enabled = false
subsurf_scatter_enabled = false
transmission_enabled = false
refraction_enabled = false
detail_enabled = false
uv1_scale = Vector3( 1, 1, 1 )
uv1_offset = Vector3( 0, 0, 0 )
uv1_triplanar = false
uv1_triplanar_sharpness = 1.0
uv2_scale = Vector3( 1, 1, 1 )
uv2_offset = Vector3( 0, 0, 0 )
uv2_triplanar = false
uv2_triplanar_sharpness = 1.0
proximity_fade_enable = false
distance_fade_enable = false
_sections_unfolded = [ "Albedo", "Clearcoat", "Metallic", "Roughness" ]

[sub_resource type="CubeMesh" id=2]

material = SubResource( 1 )
size = Vector3( 1, 0.025, 1.5 )
subdivide_width = 0
subdivide_height = 0
subdivide_depth = 0

[sub_resource type="Shader" id=3]

code = "shader_type spatial;

uniform bool mouse_over;

void fragment() 
{
	if (mouse_over) 
	{
		ALBEDO = ALBEDO / 2.0;
	}
}"

[sub_resource type="ShaderMaterial" id=4]

resource_local_to_scene = true
render_priority = 0
shader = SubResource( 3 )
shader_param/mouse_over = false
_sections_unfolded = [ "Resource", "shader_param" ]

[sub_resource type="Animation" id=5]

length = 2.0
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:translation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 0.8, 0 ), Vector3( 0, 0.8, 0 ), Vector3( 0, 0.8, 0 ), Vector3( 0, 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 0, 0 ), Vector3( 0, 0, 90 ), Vector3( 0, 0, 180 ), Vector3( 0, 0, 180 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite3D:translation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0.1, 0 ), Vector3( 0, 0.1, 0 ), Vector3( 0, 0.1, 0 ), Vector3( 0, 0.1, 0 ), Vector3( 0, 0.1, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite3D:rotation_degrees")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( -90, 0, 0 ), Vector3( -90, 0, 0 ), Vector3( -90, 0, 0 ), Vector3( -90, 0, 0 ), Vector3( -90, 0, 0 ) ]
}

[sub_resource type="Animation" id=6]

length = 2.0
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:translation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 0.8, 0 ), Vector3( 0, 0.8, 0 ), Vector3( 0, 0.8, 0 ), Vector3( 0, 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 180 ), Vector3( 0, 0, 180 ), Vector3( 0, 0, 90 ), Vector3( 0, 0, 0 ), Vector3( 0, 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite3D:translation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0.1, 0 ), Vector3( 0, 0.1, 0 ), Vector3( 0, 0.1, 0 ), Vector3( 0, 0.1, 0 ), Vector3( 0, 0.1, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite3D:rotation_degrees")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( -90, 0, 0 ), Vector3( -90, 0, 0 ), Vector3( -90, 0, 0 ), Vector3( -90, 0, 0 ), Vector3( -90, 0, 0 ) ]
}

[sub_resource type="BoxShape" id=7]

resource_local_to_scene = true
extents = Vector3( 0.5, 0.025, 0.75 )
_sections_unfolded = [ "Resource" ]

[node name="card" type="Spatial"]

script = ExtResource( 1 )
_sections_unfolded = [ "Transform", "Visibility" ]

[node name="Area" type="Area" parent="." index="0"]

input_ray_pickable = true
input_capture_on_drag = true
space_override = 0
gravity_point = false
gravity_distance_scale = 0.0
gravity_vec = Vector3( 0, -1, 0 )
gravity = 9.8
linear_damp = 0.1
angular_damp = 1.0
priority = 0.0
monitoring = true
monitorable = true
collision_layer = 1
collision_mask = 1
audio_bus_override = false
audio_bus_name = "Master"
reverb_bus_enable = false
reverb_bus_name = "Master"
reverb_bus_amount = 0.0
reverb_bus_uniformity = 0.0
_sections_unfolded = [ "Transform" ]

[node name="MeshInstance" type="MeshInstance" parent="Area" index="0"]

layers = 1
material_override = null
cast_shadow = 1
extra_cull_margin = 0.0
use_in_baked_light = false
lod_min_distance = 0.0
lod_min_hysteresis = 0.0
lod_max_distance = 0.0
lod_max_hysteresis = 0.0
mesh = SubResource( 2 )
skeleton = NodePath("..")
material/0 = SubResource( 4 )
_sections_unfolded = [ "Transform", "material" ]

[node name="Sprite3D" type="Sprite3D" parent="Area/MeshInstance" index="0"]

transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0.1, 0 )
layers = 1
material_override = null
cast_shadow = 1
extra_cull_margin = 0.0
use_in_baked_light = false
lod_min_distance = 0.0
lod_min_hysteresis = 0.0
lod_max_distance = 0.0
lod_max_hysteresis = 0.0
centered = true
offset = Vector2( 0, 0 )
flip_h = false
flip_v = false
modulate = Color( 0.484375, 0, 0, 1 )
opacity = 1.0
pixel_size = 0.01
axis = 2
transparent = true
shaded = false
double_sided = true
alpha_cut = 0
texture = ExtResource( 2 )
vframes = 1
hframes = 1
frame = 0
region_enabled = false
region_rect = Rect2( 0, 0, 0, 0 )
_sections_unfolded = [ "Transform" ]

[node name="AnimationPlayer" type="AnimationPlayer" parent="Area/MeshInstance" index="1"]

root_node = NodePath("..")
autoplay = ""
playback_process_mode = 1
playback_default_blend_time = 0.0
playback_speed = 1.0
anims/flip = SubResource( 5 )
"anims/flip back" = SubResource( 6 )
blend_times = [  ]

[node name="CollisionShape" type="CollisionShape" parent="Area" index="1"]

shape = SubResource( 7 )
disabled = false
_sections_unfolded = [ "Transform" ]

[node name="Tween" type="Tween" parent="." index="1"]

repeat = false
playback_process_mode = 1
playback_speed = 1.0
playback/active = false
playback/repeat = false
playback/speed = 1.0

[connection signal="input_event" from="Area" to="." method="_on_Area_input_event"]

[connection signal="mouse_entered" from="Area" to="." method="_on_Area_mouse_entered"]

[connection signal="mouse_exited" from="Area" to="." method="_on_Area_mouse_exited"]


